-- Keybind to open the Emote GUI is "comma" -> " , " for PC
-- Toggle button added for mobile devices
-- Favorites section at the top and full transparency for non-button components

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local MarketplaceService = game:GetService("MarketplaceService")
local ContextActionService = game:GetService("ContextActionService")
local StarterGui = game:GetService("StarterGui")
local UserInputService = game:GetService("UserInputService")
local GuiService = game:GetService("GuiService")

local LocalPlayer = Players.LocalPlayer
local Cursor = ""
local Emotes = {}
local LoadedEmotes = {}
local FavoriteEmotes = {}

-- Load favorites from local file
if isfile("FavoritedEmotes.txt") then
    local success, result = pcall(function()
        return HttpService:JSONDecode(readfile("FavoritedEmotes.txt"))
    end)
    if success then
        FavoriteEmotes = result
    end
end

-- Create a new ScreenGui and add it to CoreGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "CustomEmotesGui"
ScreenGui.Parent = game:GetService("CoreGui")

-- Main scrollable frame for emotes
local MainFrame = Instance.new("ScrollingFrame", ScreenGui)
MainFrame.Size = UDim2.new(0.6, 0, 0.6, 0)
MainFrame.Position = UDim2.new(0.2, 0, 0.2, 0)
MainFrame.BackgroundTransparency = 1 -- Full transparency
MainFrame.BorderSizePixel = 0
MainFrame.ScrollBarThickness = 5
MainFrame.ScrollingDirection = Enum.ScrollingDirection.Y
MainFrame.CanvasSize = UDim2.new(0, 0, 2, 0) -- Adjust dynamically later
MainFrame.Visible = false

-- Add a UI grid layout to organize emote buttons
local EmoteGrid = Instance.new("UIGridLayout", MainFrame)
EmoteGrid.CellSize = UDim2.new(0.2, 0, 0.2, 0)
EmoteGrid.FillDirection = Enum.FillDirection.Horizontal
EmoteGrid.SortOrder = Enum.SortOrder.LayoutOrder
EmoteGrid.HorizontalAlignment = Enum.HorizontalAlignment.Center
EmoteGrid.VerticalAlignment = Enum.VerticalAlignment.Top

-- Frame for favorites (part of the scrolling frame)
local FavoritesFrame = Instance.new("Frame", MainFrame)
FavoritesFrame.Size = UDim2.new(1, 0, 0.3, 0) -- Adjustable height for favorites
FavoritesFrame.BackgroundTransparency = 1
FavoritesFrame.BorderSizePixel = 0

local FavoriteLabel = Instance.new("TextLabel", FavoritesFrame)
FavoriteLabel.Size = UDim2.new(1, 0, 0.2, 0)
FavoriteLabel.Text = "Favorite Emotes"
FavoriteLabel.BackgroundTransparency = 1
FavoriteLabel.TextScaled = true
FavoriteLabel.TextColor3 = Color3.fromRGB(255, 255, 255)

local FavoriteGrid = Instance.new("UIGridLayout", FavoritesFrame)
FavoriteGrid.CellSize = UDim2.new(0.2, 0, 0.6, 0)
FavoriteGrid.FillDirection = Enum.FillDirection.Horizontal
FavoriteGrid.SortOrder = Enum.SortOrder.LayoutOrder
FavoriteGrid.HorizontalAlignment = Enum.HorizontalAlignment.Center
FavoriteGrid.VerticalAlignment = Enum.VerticalAlignment.Top

-- Create a function to display notification
local function SendNotification(title, text, duration)
    StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = duration or 5
    })
end

-- Save favorites to local file
local function SaveFavorites()
    writefile("FavoritedEmotes.txt", HttpService:JSONEncode(FavoriteEmotes))
end

-- Function to add an emote button to the GUI
local function AddEmoteButton(emoteData, isFavorite)
    local EmoteButton = Instance.new("TextButton")
    EmoteButton.Size = UDim2.new(0, 100, 0, 100)
    EmoteButton.Text = emoteData.name
    EmoteButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    EmoteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    
    -- Play the emote when button is clicked
    EmoteButton.MouseButton1Click:Connect(function()
        local Humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if Humanoid and Humanoid.RigType == Enum.HumanoidRigType.R15 then
            pcall(function()
                Humanoid:PlayEmoteAndGetAnimTrackById(emoteData.id)
            end)
        else
            SendNotification("R6 Rig Type Not Supported", "Emotes can only be played on R15 characters.")
        end
    end)
    
    -- Create favorite toggle button
    local FavoriteToggle = Instance.new("TextButton", EmoteButton)
    FavoriteToggle.Size = UDim2.new(0.3, 0, 0.3, 0)
    FavoriteToggle.Position = UDim2.new(0.7, 0, 0, 0)
    FavoriteToggle.Text = "â˜…"
    FavoriteToggle.TextColor3 = isFavorite and Color3.fromRGB(255, 215, 0) or Color3.fromRGB(200, 200, 200)
    
    FavoriteToggle.MouseButton1Click:Connect(function()
        if not table.find(FavoriteEmotes, emoteData.id) then
            table.insert(FavoriteEmotes, emoteData.id)
            FavoriteToggle.TextColor3 = Color3.fromRGB(255, 215, 0)
            AddEmoteButton(emoteData, true).Parent = FavoritesFrame -- Add to favorite frame
        else
            for i, v in ipairs(FavoriteEmotes) do
                if v == emoteData.id then
                    table.remove(FavoriteEmotes, i)
                    break
                end
            end
            FavoriteToggle.TextColor3 = Color3.fromRGB(200, 200, 200)
            -- Remove from favorite frame
            for _, btn in ipairs(FavoritesFrame:GetChildren()) do
                if btn:IsA("TextButton") and btn.Text == emoteData.name then
                    btn:Destroy()
                end
            end
        end
        SaveFavorites()
    end)
    
    return EmoteButton
end

-- Function to load all emotes
local function LoadEmotes()
    local function RequestEmotes()
        local success, Response = pcall(function()
            return game:HttpGetAsync("https://catalog.roblox.com/v1/search/items/details?Category=12&Subcategory=39&SortType=1&limit=30&IncludeNotForSale=true&cursor=" .. Cursor)
        end)
        if not success then
            task.wait(10)
            return RequestEmotes()
        end
        return Response
    end

    local Response = RequestEmotes()
    local Body = HttpService:JSONDecode(Response)

    -- Add emotes to GUI
    for _, emoteData in pairs(Body.data) do
        local isFavorite = table.find(FavoriteEmotes, emoteData.id) ~= nil
        AddEmoteButton({
            name = emoteData.name,
            id = emoteData.id
        }, isFavorite).Parent = isFavorite and FavoritesFrame or MainFrame
        
        if isFavorite then
            AddEmoteButton({
                name = emoteData.name,
                id = emoteData.id
            }, true).Parent = FavoritesFrame
        end
    end

    -- Adjust canvas size based on content
    MainFrame.CanvasSize = UDim2.new(0, 0, 0, #MainFrame:GetChildren() * 110)

    -- Handle pagination if more emotes are available
    if Body.nextPageCursor then
        Cursor = Body.nextPageCursor
        LoadEmotes()
    end
end

-- Toggle button for mobile devices
local ToggleButton = Instance.new("TextButton", ScreenGui)
ToggleButton.Size = UDim2.new(0.1, 0, 0.1, 0)
ToggleButton.Position = UDim2.new(0.9, -20, 0.9, -20)
ToggleButton.Text = "Toggle Emotes"
ToggleButton.TextScaled = true
ToggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)

-- Toggle the visibility of the Emote GUI when the button is clicked
ToggleButton.MouseButton1Click:Connect(function()
    MainFrame.Visible = not MainFrame.Visible
    FavoritesFrame.Visible = not FavoritesFrame.Visible
end)

-- Bind the comma key to toggle the GUI for PC users
ContextActionService:BindAction("ToggleEmoteGui", function(_, inputState)
    if inputState == Enum.UserInputState.Begin then
        MainFrame.Visible = not MainFrame.Visible
        FavoritesFrame.Visible = not FavoritesFrame.Visible
    end
end, true, Enum.KeyCode.Comma)

-- Load all emotes
LoadEmotes()

-- Display a notification when the emotes GUI is ready
SendNotification("Emotes GUI", "Emotes GUI is now available. Press ',' or use the button to toggle shutttt.")
