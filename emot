-- Keybind to open for PC is "comma" -> " , "
-- Made by Gi#7331

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Tips!",
    Text = "Wait 1 - 15 seconds to show GUI. If it doesn't show, try executing again.",
    Duration = 15
})

if game:GetService("CoreGui"):FindFirstChild("Emotes") then
    game:GetService("CoreGui"):FindFirstChild("Emotes"):Destroy()
end

wait(1)

local ContextActionService = game:GetService("ContextActionService")
local HttpService = game:GetService("HttpService")
local GuiService = game:GetService("GuiService")
local CoreGui = game:GetService("CoreGui")
local MarketplaceService = game:GetService("MarketplaceService")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local UserInputService = game:GetService("UserInputService")

local Emotes = {}
local LoadedEmotes = {}

local function AddEmote(name: string, id: IntValue, price: IntValue?)
	LoadedEmotes[id] = false
	task.spawn(function()
		if not (name and id) then
			return
		end
		local success, date = pcall(function()
			local info = MarketplaceService:GetProductInfo(id)
			local updated = info.Updated
			return DateTime.fromIsoDate(updated):ToUniversalTime()
		end)
		if not success then
			task.wait(10)
			AddEmote(name, id, price)
			return
		end
		local unix = os.time({
			year = date.Year,
			month = date.Month,
			day = date.Day,
			hour = date.Hour,
			min = date.Minute,
			sec = date.Second
		})
		LoadedEmotes[id] = true
		table.insert(Emotes, {
			["name"] = name,
			["id"] = id,
			["icon"] = "rbxthumb://type=Asset&id=".. id .."&w=150&h=150",
			["price"] = price or 0,
			["lastupdated"] = unix,
			["sort"] = {}
		})
	end)
end

local CurrentSort = "recentfirst"
local FavoriteOff = "rbxassetid://10651060677"
local FavoriteOn = "rbxassetid://10651061109"
local FavoritedEmotes = {}

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "Emotes"
ScreenGui.DisplayOrder = 2
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = CoreGui -- Ensuring it is parented properly

-- Loading Screen
local LoadingFrame = Instance.new("Frame", ScreenGui)
LoadingFrame.Size = UDim2.new(0.3, 0, 0.1, 0)
LoadingFrame.Position = UDim2.new(0.35, 0, 0.4, 0) -- Centered
LoadingFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
LoadingFrame.BackgroundTransparency = 0.5
LoadingFrame.BorderSizePixel = 0

local UICorner = Instance.new("UICorner", LoadingFrame)
UICorner.CornerRadius = UDim.new(0.2, 0)

local LoadingText = Instance.new("TextLabel", LoadingFrame)
LoadingText.Size = UDim2.new(1, 0, 1, 0)
LoadingText.Text = "Loading Emotes..."
LoadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
LoadingText.Font = Enum.Font.GothamBold
LoadingText.TextScaled = true
LoadingText.BackgroundTransparency = 1

-- Main GUI Frame
local BackFrame = Instance.new("Frame")
BackFrame.Size = UDim2.new(0.9, 0, 0.5, 0)
BackFrame.AnchorPoint = Vector2.new(0.5, 0.5)
BackFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
BackFrame.SizeConstraint = Enum.SizeConstraint.RelativeYY
BackFrame.BackgroundTransparency = 1
BackFrame.BorderSizePixel = 0
BackFrame.Parent = ScreenGui
BackFrame.Visible = false -- Hide until loaded

-- Toggle Button for opening/closing GUI
local Open = Instance.new("TextButton")
Open.Name = "Open"
Open.Parent = ScreenGui
Open.Size = UDim2.new(0.1, 0, 0.05, 0)
Open.Position = UDim2.new(0.9, -50, 0.1, 0) -- Positioned at the top-right
Open.Text = "Close"
Open.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Open.TextColor3 = Color3.fromRGB(255, 255, 255)
Open.TextScaled = true
Open.BackgroundTransparency = 0.5

-- Making the button visible by setting its ZIndex high enough
Open.ZIndex = 100

Open.MouseButton1Up:Connect(function()
    if Open.Text == "Open" then
        Open.Text = "Close"
        BackFrame.Visible = true
    else
        Open.Text = "Open"
        BackFrame.Visible = false
    end
end)

UICorner.Name = "UICorner"
UICorner.Parent = Open
UICorner.CornerRadius = UDim.new(1, 0)

-- Fetch Emotes Logic
local Cursor = ""
while true do
	local function Request()
		local success, Response = pcall(function()
			return game:HttpGetAsync("https://catalog.roblox.com/v1/search/items/details?Category=12&Subcategory=39&SortType=1&SortAggregation=&limit=30&IncludeNotForSale=true&cursor=".. Cursor)
		end)
		if not success then
			task.wait(10)
			return Request()
		end
		return Response
	end

	local Response = Request()
	local Body = HttpService:JSONDecode(Response)
	for i,v in pairs(Body.data) do
		AddEmote(v.name, v.id, v.price)
	end
	if Body.nextPageCursor ~= nil then
		Cursor = Body.nextPageCursor
	else
		break
	end
end

-- Wait for all emotes to load before hiding the loading screen
local function EmotesLoaded()
	for i, loaded in pairs(LoadedEmotes) do
		if not loaded then
			return false
		end
	end
	return true
end

while not EmotesLoaded() do
	task.wait()
end

-- Hide the loading screen and show the main frame
LoadingFrame:Destroy()
BackFrame.Visible = true

-- Send notification once done
StarterGui:SetCore("SendNotification", {
    Title = "Done!",
    Text = "Emotes GUI is ready!",
    Duration = 10
})
