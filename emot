local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local StarterGui = game:GetService("StarterGui")
local CoreGui = game:GetService("CoreGui")
local MarketplaceService = game:GetService("MarketplaceService")

-- Destroy any existing GUI instances if the script runs again
if CoreGui:FindFirstChild("CustomEmotesGui") then
    CoreGui:FindFirstChild("CustomEmotesGui"):Destroy()
end

-- Create main GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "CustomEmotesGui"
ScreenGui.Parent = CoreGui

-- Loading frame
local LoadingFrame = Instance.new("Frame", ScreenGui)
LoadingFrame.Size = UDim2.new(0.3, 0, 0.1, 0)
LoadingFrame.Position = UDim2.new(0.35, 0, 0.1, 0)
LoadingFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
LoadingFrame.BackgroundTransparency = 0.5
LoadingFrame.BorderSizePixel = 0

local UICorner = Instance.new("UICorner", LoadingFrame)
UICorner.CornerRadius = UDim.new(0.2, 0)

-- Loading text
local LoadingText = Instance.new("TextLabel", LoadingFrame)
LoadingText.Size = UDim2.new(1, 0, 1, 0)
LoadingText.Text = "Loading Emotes..."
LoadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
LoadingText.Font = Enum.Font.GothamBold
LoadingText.TextScaled = true
LoadingText.BackgroundTransparency = 1

-- Main scrollable frame for emotes (initially hidden)
local MainFrame = Instance.new("ScrollingFrame", ScreenGui)
MainFrame.Size = UDim2.new(0.6, 0, 0.6, 0)
MainFrame.Position = UDim2.new(0.2, 0, 0.2, 0)
MainFrame.BackgroundTransparency = 0.5
MainFrame.ScrollBarThickness = 5
MainFrame.Visible = false -- Hidden initially
MainFrame.CanvasSize = UDim2.new(0, 0, 1, 0) -- Initial canvas size

-- UI grid layout for buttons
local EmoteGrid = Instance.new("UIGridLayout", MainFrame)
EmoteGrid.CellSize = UDim2.new(0.15, 0, 0.15, 0)
EmoteGrid.CellPadding = UDim2.new(0.01, 0, 0.01, 0)
EmoteGrid.SortOrder = Enum.SortOrder.LayoutOrder

local Emotes = {}
local LoadedEmotes = {}

-- Function to add emote data
local function AddEmote(name, id, icon)
    table.insert(Emotes, {
        name = name,
        id = id,
        icon = icon
    })
end

-- Function to create emote buttons
local function CreateEmoteButtons()
    for _, emote in pairs(Emotes) do
        local EmoteButton = Instance.new("TextButton", MainFrame)
        EmoteButton.Size = UDim2.new(0.15, 0, 0.15, 0)
        EmoteButton.Text = ""
        EmoteButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        EmoteButton.BackgroundTransparency = 0.5
        EmoteButton.BorderSizePixel = 0

        local UICorner = Instance.new("UICorner", EmoteButton)
        UICorner.CornerRadius = UDim.new(0.2, 0)

        -- Add emote image
        local EmoteImage = Instance.new("ImageLabel", EmoteButton)
        EmoteImage.Size = UDim2.new(0.8, 0, 0.8, 0)
        EmoteImage.Position = UDim2.new(0.1, 0, 0.1, 0)
        EmoteImage.Image = emote.icon
        EmoteImage.BackgroundTransparency = 1

        -- Play emote on click
        EmoteButton.MouseButton1Click:Connect(function()
            local Humanoid = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if Humanoid and Humanoid.RigType == Enum.HumanoidRigType.R15 then
                pcall(function()
                    Humanoid:PlayEmoteAndGetAnimTrackById(emote.id)
                end)
                MainFrame.Visible = false -- Hide frame when emote is selected
            end
        end)
    end

    -- Update ScrollFrame canvas size to fit all buttons
    MainFrame.CanvasSize = UDim2.new(0, 0, 0, EmoteGrid.AbsoluteContentSize.Y + 10)
end

-- Load all emotes with cursor-based pagination
local function LoadEmotes()
    local Cursor = ""
    while true do
        local function Request()
            local success, Response = pcall(function()
                return game:HttpGetAsync("https://catalog.roblox.com/v1/search/items/details?Category=12&Subcategory=39&SortType=1&SortAggregation=&limit=30&IncludeNotForSale=true&cursor=".. Cursor)
            end)

            if success then
                return HttpService:JSONDecode(Response)
            else
                wait(10) -- Retry delay
                return Request()
            end
        end

        local Response = Request()
        for _, v in pairs(Response.data) do
            AddEmote(v.name, v.id, "rbxthumb://type=Asset&id="..v.id.."&w=150&h=150")
        end

        if Response.nextPageCursor then
            Cursor = Response.nextPageCursor
        else
            break -- End loop when no more pages
        end
    end
end

-- Wait until all emotes are loaded
spawn(function()
    LoadEmotes()
    while #Emotes == 0 do
        wait(0.5) -- Show loading if no emotes have been loaded yet
    end
    -- After loading, destroy loading frame and create buttons
    LoadingFrame:Destroy()
    MainFrame.Visible = true -- Show emote GUI once loaded
    CreateEmoteButtons()
end)

-- Send a notification once GUI is loaded
StarterGui:SetCore("SendNotification", {
    Title = "Emotes GUI",
    Text = "The emotes GUI is ready to use.",
    Duration = 5
})
